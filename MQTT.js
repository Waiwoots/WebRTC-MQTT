const WebSocket = require("ws");
const { RTCPeerConnection, RTCSessionDescription } = require("wrtc");

const wss = new WebSocket.Server({ port: 8080 });

let espConnection, clientConnection;
let espDataChannel, clientDataChannel;

wss.on("connection", (ws) => {
    console.log("‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö WebSocket Signaling Server!");

    ws.on("message", async (message) => {
        const data = JSON.parse(message);

        if (data.device === "esp32") {
            console.log("ESP32 ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠!");
            espConnection = new RTCPeerConnection();
            espDataChannel = espConnection.createDataChannel("data");

            espDataChannel.onopen = () => console.log("ESP32 DataChannel ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß!");
            espDataChannel.onmessage = (event) => {
                console.log("üì° ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å ESP32:", event.data);
                if (clientDataChannel && clientDataChannel.readyState === "open") {
                    clientDataChannel.send(event.data); // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
                }
            };

            const offer = await espConnection.createOffer();
            await espConnection.setLocalDescription(offer);
            ws.send(JSON.stringify({ type: "offer", offer }));
        } 
        
        else if (data.device === "client") {
            console.log("‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠!");
            clientConnection = new RTCPeerConnection();
            clientDataChannel = clientConnection.createDataChannel("data");

            clientDataChannel.onopen = () => console.log("Client DataChannel ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß!");
            clientDataChannel.onmessage = (event) => {
                console.log("üì© Client ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", event.data);
                if (espDataChannel && espDataChannel.readyState === "open") {
                    espDataChannel.send(event.data); // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏´‡πâ ESP32
                }
            };

            const offer = await clientConnection.createOffer();
            await clientConnection.setLocalDescription(offer);
            ws.send(JSON.stringify({ type: "offer", offer }));
        }
    });
});
